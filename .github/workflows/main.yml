name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  # build:

    # runs-on: ubuntu-latest
    
    # steps:
    # - uses: actions/checkout@v3

    # - name: Get current date as version
    #   id: date
    #   run: echo "::set-output name=date::$(date +'%Y-%m-%dT%H:%M:%S')"
      
        
      
    # - name: Build the Docker image
    #   run: | 
    #     docker build . --file Dockerfile --tag codemohitpra2103/multiple-disease-detection-frontend:latest
    #     echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_ID }} --password-stdin
    #     docker push codemohitpra2103/multiple-disease-detection-frontend
      # run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
    # - name: Generate deployment package
    #   run: zip -r deploy.zip . -x '*.git*'
      
    # - name: Deploy to EB
    #   uses: einaregilsson/beanstalk-deploy@v22
    #   with:
    #     aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     application_name: multiple-disease-frontend
    #     environment_name: Multiple-disease-frontend-env
    #     version_label: ${{ steps.date.outputs.date }}
    #     region: ap-south-1
    #     deployment_package: deploy.zip
  deploy:
    runs-on: ubuntu-latest
    # needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_ID }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Set permissions for private key
        run: |
          echo "${{ secrets.AWS_SECRET_ACCESS_KEY }}" > key.pem
          chmod 600 key.pem
      - name: Pull Docker image
        run: |
          # ssh -i key.pem ${{ secrets.USER_NAME }}@${{ secrets.HOSTNAME }}
          ssh -o StrictHostKeyChecking=no -i key ${{ secrets.USER_NAME }}@${{ secrets.HOSTNAME }}
            echo "Connection established"
      # - name: Stop running container
      # ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@172.31.12.3 'sudo docker pull codemohitpra2103/multiple-disease-detection-frontend:latest'
      #   run: |
      #     ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@172.31.12.3 'sudo docker stop multiple-disease-detection-frontend || true'
      #     ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@172.31.12.3 'sudo docker rm multiple-disease-detection-frontend || true'
      # - name: Run new container
      #   run: |
      #     ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@172.31.12.3 'sudo docker run -d --name multiple-disease-detection-frontend -p 80:3000 codemohitpra2103/multiple-disease-detection-frontend:latest'
